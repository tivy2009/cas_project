查看centos版本
[root@localhost ~]# cat /etc/redhat-release
CentOS release 5.5 (Final)

查看系统是64位还是32位:
[root@localhost ~]# getconf LONG_BIT
64

代理上网
（1） http
vim /etc/profile
http_proxy=http://username:password@yourproxy:8080/
ftp_proxy=http://username:password@yourproxy:8080/
export http_proxy
export ftp_proxy
source /etc/profile
（2） yum
vim /etc/yum.conf
proxy=http://username:password@yourproxy:8080/
source /etc/profile
(3) wget
vim /etc/wgetrc
http_proxy=http://username:password@yourproxy:8080
https_proxy=http://username:password@yourproxy:8080
ftp_proxy=http://username:password@yourproxy:8080
source /etc/profile

更新163源
cd /etc/yum.repos.d
mv CentOS-Base.repo CentOS-Base.repo.backup
wget http://mirrors.163.com/.help/CentOS6-Base-163.repo
mv CentOS6-Base-163.repo CentOS-Base.repo
yum clean all

更新阿里源
cd /etc/yum.repos.d
sudo mv CentOS-Base.repo CentOS-Base.repo.bak
sudo wget -O CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
sudo wget -P /etc/yum.repos.d/ http://mirrors.aliyun.com/repo/epel-7.repo （添加阿里EPEL源，可选）
yum clean all
yum makecache

安装所需环境
(自己编译安装)
yum install gcc-c++

yum install -y pcre pcre-devel

yum install -y zlib zlib-devel

yum install -y openssl openssl-devel

wget -c https://nginx.org/download/nginx-1.13.12.tar.gz

tar -zxvf nginx-1.13.12.tar.gz
cd nginx-1.13.12

配置
使用默认配置

./configure

自定义配置（不推荐）

./configure \
--prefix=/usr/local/nginx \
--conf-path=/usr/local/nginx/conf/nginx.conf \
--pid-path=/usr/local/nginx/conf/nginx.pid \
--lock-path=/var/lock/nginx.lock \
--error-log-path=/var/log/nginx/error.log \
--http-log-path=/var/log/nginx/access.log \
--with-http_gzip_static_module \
--http-client-body-temp-path=/var/temp/nginx/client \
--http-proxy-temp-path=/var/temp/nginx/proxy \
--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \
--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \
--http-scgi-temp-path=/var/temp/nginx/scgi


添加sticky模块安装，如果已经安装了需要再添加模块，必须要重新编译
 ./configure --prefix=/usr/local/nginx \
 --with-http_stub_status_module \
 --with-http_ssl_module --with-http_realip_module \
 --with-http_image_filter_module \
 --add-module=../nginx-goodies-nginx-sticky-module-ng
 如果./configure报错提示需要安装GD lib模块，则执行如下命令安装
  yum install gd-devel
  
  然后 make 
  如果是第一次安装接着执行make install
  如果已经安装了，只是添加模块，则不用再执行make install  ,只需要复制nginx文件就可以 如 cp objs/nginx /usr/local/nginx/sbin/nginx 选择覆盖
  
nginx 查看已经安装的模块 ./nginx -V

编译安装
make
make install
查找安装路径：

whereis nginx

启动、停止nginx
cd /usr/local/nginx/sbin/
./nginx 
./nginx -s stop
./nginx -s quit
./nginx -s reload
./nginx -s quit:此方式停止步骤是待nginx进程处理任务完毕进行停止。
./nginx -s stop:此方式相当于先查出nginx进程id再使用kill命令强制杀掉进程。

./nginx -t 测试配置文件

查询nginx进程：

ps aux|grep nginx

开机自启动
即在rc.local增加启动代码就可以了。

vi /etc/rc.local
增加一行 /usr/local/nginx/sbin/nginx
设置执行权限：
需要添加/etc/rc.d/rc.local文件的执行权限，此文件在以后的新版本中将会被启用

chmod 755 rc.local

centos 7 不能按上面的方式自动启用
添加启动脚本到 vi /lib/systemd/system/nginx.service
systemctl enable nginx.service
如果提示没有执行权限，需要先执行这条语句systemctl daemon-reexec
修改了nginx.service文件后也需要先执行这个文件才能生效
systemctl daemon-reload
执行启动命令
systemctl start nginx.service